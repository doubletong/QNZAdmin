doctype html
html.no-js(lang='')
  head
    meta(charset='utf-8')
    title 用户登录
    meta(name='description', content='')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='manifest', href='site.webmanifest')
    link(rel='apple-touch-icon', href='icon.png')
    // Place favicon.ico in the root directory
    meta(name='theme-color', content='#fafafa')
    link(href='fonts/iconfont.css', rel='stylesheet')
    link(href='bootstrap/css/bootstrap.min.css', rel='stylesheet')
    link(href='css/styles.min.css', rel='stylesheet')
    style(type='text/css').
        .input-group-text {
            padding:0;
            overflow: hidden;
            background-color:#fff;
        }
  body
    .page-login
      
              
      .loginbox
        .logo
            img(src='img/logo.svg', alt='')       
          
        form.loginForm(method='post')
          .mb-4        
            input#username.form-control(type='text', name='username', placeholder="帐号/用户名", required)
          .mb-4        
            input#password.form-control(type='password', name='password',placeholder="密码",required)
          .mb-4      
            .input-group
              input#captcha.form-control(type="text", name="captcha", placeholder="验证码", aria-label="Captcha", aria-describedby="basic-addon2", required)
              span#basic-addon2.input-group-text
                img#imgCaptcha(src="https://www.fillmurray.com/g/120/42", alt="CAPTCHA")
     


          .custom-control.custom-checkbox.mb-3
            input#rememberme.custom-control-input(type='checkbox')
            label.custom-control-label(for='rememberme') 记住我
              
          .text-center  
            button.btn.btn-primary(type='submit')
              i.iconfont.icon-login 
              | 登录
            a.btn.btn-outline-secondary(href="/") 
              i.iconfont.icon-left 
              | 离开

              
      include includes/footer.pug


    script(src='js/libs/jquery-1.12.4.min.js')
    script(src='bootstrap/js/bootstrap.bundle.min.js')
    script(src='js/libs/jquery.transit.min.js')
    script(src='js/app.js')
    script.

      $(function () {
        $('button').click(function (e) {
          e.preventDefault();
          location.href = 'index.html';
        });
      });

      var background = {}

      background.initializr = function () {

          var $this = this;



          //option
          $this.id = "background_css3";
          $this.style = { bubbles_color: "#fff", stroke_width: 0, stroke_color: "black" };
          $this.bubbles_number = 30;
          $this.speed = [1500, 8000]; //milliseconds
          $this.max_bubbles_height = $this.height;
          $this.shape = false // 1 : circle | 2 : triangle | 3 : rect | false :random

          if ($("#" + $this.id).lenght > 0) {
              $("#" + $this.id).remove();
          }
          $this.object = $("<div style='z-inde:-1;margin:0;padding:0; overflow:hidden;position:absolute;bottom:0;opacity:0.3' id='" + $this.id + "'> </div>'").appendTo("body");

          $this.ww = $(window).width()
          $this.wh = $(window).height()
          $this.width = $this.object.width($this.ww);
          $this.height = $this.object.height($this.wh);


          $("body").prepend("<style>.shape_background {transform-origin:center; width:80px; height:80px; background: " + $this.style.bubbles_color + "; position: absolute}</style>");


          for (i = 0; i < $this.bubbles_number; i++) {
              $this.generate_bubbles()
          }

      }





      background.generate_bubbles = function () {
          var $this = this;
          var base = $("<div class='shape_background'></div>");
          var shape_type = $this.shape ? $this.shape : Math.floor($this.rn(1, 3));
          if (shape_type == 1) {
              var bolla = base.css({ borderRadius: "50%" })
          } else if (shape_type == 2) {
              var bolla = base.css({ width: 0, height: 0, "border-style": "solid", "border-width": "0 40px 69.3px 40px", "border-color": "transparent transparent " + $this.style.bubbles_color + " transparent", background: "transparent" });
          } else {
              var bolla = base;
          }
          var rn_size = $this.rn(.8, 1.2);
          bolla.css({ "transform": "scale(" + rn_size + ") rotate(" + $this.rn(-360, 360) + "deg)", top: $this.wh + 100, left: $this.rn(-60, $this.ww + 60) });
          bolla.appendTo($this.object);
          bolla.transit({ top: $this.rn($this.wh / 2, $this.wh / 2 - 60), "transform": "scale(" + rn_size + ") rotate(" + $this.rn(-360, 360) + "deg)", opacity: 0 }, $this.rn($this.speed[0], $this.speed[1]), function () {
              $(this).remove();
              $this.generate_bubbles();
          })

      }

      background.rn = function (from, to, arr) {
          if (arr) {
              return Math.random() * (to - from + 1) + from;
          } else {
              return Math.floor(Math.random() * (to - from + 1) + from);
          }
      }
      background.initializr()


